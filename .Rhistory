pool <- dbPool(
drv = RMySQL::MySQL(),
dbname = "barbeerdrinker",
host = "barbeerdrinker.cwbowizjcrlm.us-west-1.rds.amazonaws.com",
username = "juanmatthew",
password = "password"
)
poolClose(pool)
rm(pool)
pool <- dbPool(
drv = RMySQL::MySQL(),
dbname = "barbeerdrinker",
host = "barbeerdrinker.cwbowizjcrlm.us-west-1.rds.amazonaws.com",
username = "juanmatthew",
password = "password"
)
query <- "select name, left(open, 2) as open_hr,
right(open, 2) as open_min,
left(close, 2) as close_hr,
right(close, 2) as close_min
from(select name, left(open, 5) as open, left(close, 5) close from bars) tmp"
bars_md <- tbl_df(dbGetQuery(pool, query))
bars_md
hrs <- filter(bars_md, name == transactions[11, 3]$bar_name)
hrs
hrs <- filter(bars_md, name == transactions[12, 3]$bar_name)
hrs
transactions[12, 3]$bar_name
query <- "select name, left(open, 2) as open_hr,
right(open, 2) as open_min,
left(close, 2) as close_hr,
right(close, 2) as close_min
from(select name, left(open, 5) as open, left(close, 5) close from bars) tmp"
bars_md <- tbl_df(dbGetQuery(pool, query))
bars_md
hrs <- filter(bars_md, name == transactions[12, 3]$bar_name)
hrs
genHours <- function(transactions, bars_md) {
for (i in seq(1:nrow(transactions))) {
hrs <- filter(bars_md, name == transactions[i, 3]$bar_name)
oh <- as.integer(hrs$open_hr)
om <- as.integer(hrs$open_min)
ch <- as.integer(hrs$close_hr)
cm <- as.integer(hrs$close_min)
if (ch >= 0) { ch <- ch + 24 }
if (cm == 0) { cm <- 60 }
bill_hr <- runif(1, oh, ch) %>% round(0)
bill_min <- runif(1, om, cm) %>% round(0)
if(bill_min == 60) { bill_min <- 0 }
timestamp <- paste(bill_hr, bill_min, sep = ":")
transactions[i, 4] <- timestamp
}
return(transactions)
}
tmp <- genHours(transactions, bars_md)
genHours <- function(transactions, bars_md) {
for (i in seq(1:nrow(transactions))) {
hrs <- filter(bars_md, name == transactions[i, 3]$bar_name)
oh <- as.integer(hrs$open_hr)
om <- as.integer(hrs$open_min)
ch <- as.integer(hrs$close_hr)
cm <- as.integer(hrs$close_min)
print(ch)
if (ch >= 0) { ch <- ch + 24 }
if (cm == 0) { cm <- 60 }
bill_hr <- runif(1, oh, ch) %>% round(0)
bill_min <- runif(1, om, cm) %>% round(0)
if(bill_min == 60) { bill_min <- 0 }
timestamp <- paste(bill_hr, bill_min, sep = ":")
transactions[i, 4] <- timestamp
}
return(transactions)
}
tmp <- genHours(transactions, bars_md)
genHours <- function(transactions, bars_md) {
for (i in seq(1:nrow(transactions))) {
hrs <- filter(bars_md, name == transactions[i, 3]$bar_name)
oh <- as.integer(hrs$open_hr)
om <- as.integer(hrs$open_min)
ch <- as.integer(hrs$close_hr)
cm <- as.integer(hrs$close_min)
print(ch)
print(i)
if (ch >= 0) { ch <- ch + 24 }
if (cm == 0) { cm <- 60 }
bill_hr <- runif(1, oh, ch) %>% round(0)
bill_min <- runif(1, om, cm) %>% round(0)
if(bill_min == 60) { bill_min <- 0 }
timestamp <- paste(bill_hr, bill_min, sep = ":")
transactions[i, 4] <- timestamp
}
return(transactions)
}
tmp <- genHours(transactions, bars_md)
transactions[858, 3]$bar_name
transactions[85, 3]$bar_name
query <- "select name, left(open, 2) as open_hr,
right(open, 2) as open_min,
left(close, 2) as close_hr,
right(close, 2) as close_min
from(select name, left(open, 5) as open, left(close, 5) close from bars) tmp"
bars_md <- tbl_df(dbGetQuery(pool, query))
genHours <- function(transactions, bars_md) {
for (i in seq(1:nrow(transactions))) {
hrs <- filter(bars_md, name == transactions[i, 3]$bar_name)
oh <- as.integer(hrs$open_hr)
om <- as.integer(hrs$open_min)
ch <- as.integer(hrs$close_hr)
cm <- as.integer(hrs$close_min)
print(ch)
print(i)
if (ch >= 0) { ch <- ch + 24 }
if (cm == 0) { cm <- 60 }
bill_hr <- runif(1, oh, ch) %>% round(0)
bill_min <- runif(1, om, cm) %>% round(0)
if(bill_min == 60) { bill_min <- 0 }
timestamp <- paste(bill_hr, bill_min, sep = ":")
transactions[i, 4] <- timestamp
}
return(transactions)
}
tmp <- genHours(transactions, bars_md)
transactions
transactions %>% distinct(bar_name)
t <- transactions %>% distinct(bar_name)
View(t)
query <- "select name, left(open, 2) as open_hr,
right(open, 2) as open_min,
left(close, 2) as close_hr,
right(close, 2) as close_min
from(select name, left(open, 5) as open, left(close, 5) close from bars) tmp"
bars_md <- tbl_df(dbGetQuery(pool, query))
genHours <- function(transactions, bars_md) {
for (i in seq(1:nrow(transactions))) {
hrs <- filter(bars_md, name == transactions[i, 3]$bar_name)
oh <- as.integer(hrs$open_hr)
om <- as.integer(hrs$open_min)
ch <- as.integer(hrs$close_hr)
cm <- as.integer(hrs$close_min)
print(ch)
print(i)
if (ch >= 0) { ch <- ch + 24 }
if (cm == 0) { cm <- 60 }
bill_hr <- runif(1, oh, ch) %>% round(0)
bill_min <- runif(1, om, cm) %>% round(0)
if(bill_min == 60) { bill_min <- 0 }
timestamp <- paste(bill_hr, bill_min, sep = ":")
transactions[i, 4] <- timestamp
}
return(transactions)
}
tmp <- genHours(transactions, bars_md)
tmp
genHours <- function(transactions, bars_md) {
for (i in seq(1:nrow(transactions))) {
hrs <- filter(bars_md, name == transactions[i, 3]$bar_name)
oh <- as.integer(hrs$open_hr)
om <- as.integer(hrs$open_min)
ch <- as.integer(hrs$close_hr)
cm <- as.integer(hrs$close_min)
print(ch)
print(i)
if (ch >= 0) { ch <- ch + 24 }
if (cm == 0) { cm <- 60 }
bill_hr <- runif(1, oh, ch) %>% round(0)
bill_min <- runif(1, om, cm) %>% round(0)
if(bill_min == 60) { bill_min <- 0 }
if(bill_min < 10) { bill_min <- paste(bill_min, "0", sep = "") }
timestamp <- paste(bill_hr, bill_min, sep = ":")
transactions[i, 4] <- timestamp
}
return(transactions)
}
tmp <- genHours(transactions, bars_md)
tmp
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
rm(list=ls())
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
transactions
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
transactions
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
transactions
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
transactions
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
transactions
source('~/Documents/barbeerdrinker/barbeerdrinker.R')
transactions
# save our transactions table in project folder
write_csv("~/Documents/barbeerdrinker/tables/csv/transactions.csv")
# save our transactions table in project folder
write_csv(transactions, "~/Documents/barbeerdrinker/tables/csv/transactions.csv")
bars
bars %>% filter(name == "The Press")
View(bars)
source('~/Documents/barbeerdrinker/generate_transactions.R')
# save our transactions table in project folder
write_csv(transactions, "~/Documents/barbeerdrinker/tables/csv/transactions.csv")
View(bars)
View(bars %>% select(name, open, close))
transactions %>% order_by(transaction_time)
transactions %>% arrange(transaction_time)
transactions %>% arrange(desc(transaction_time)
)
t <- transactions %>% arrange(transaction_time)
View(t)
source('~/Documents/barbeerdrinker/generate_transactions.R')
transactions
transactions %>% arrange(transaction_time)
t <- transactions %>% arrange(transaction_time)
View(t)
source('~/Documents/barbeerdrinker/generate_transactions.R')
View(transactions)
transactions %>% select(transaction_id, open, close)
transactions %>% arrange(transaction_time)
source('~/Documents/barbeerdrinker/generate_transactions.R')
transactions %>% arrange(transaction_time)
# generate those timestamps and add them to the database in-function
transactions <- genHours(transactions, bars_md) %>% arrange(transaction_time)
transactions
transactions %>% distinct(transaction_id)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id, bar) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
transactions
transactions %>% distinct(transaction_id)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
transactions %>% distinct(transaction_id)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(bar = bar, subtotal = sum(item_total)) %>%
ungroup()
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(bar = distinct(bar), subtotal = sum(item_total)) %>%
ungroup()
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(bar = distinct(bar)$value, subtotal = sum(item_total)) %>%
ungroup()
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
View(t)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id, bar) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
transactions %>% distinct(transaction_id)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
transactions
transactions %>% distinct(transaction_id)
?left_join
View(transactions)
View(bills)
left_join(transactions, bills, by = transaction_id)
bills %>% group_by(transaction_id, bar) %>% count()
bills %>% group_by(transaction_id, bar) %>% distinct()
bills %>% group_by(transaction_id, bar) %>% distinct(transaction_id)
bills %>% group_by(transaction_id, bar) %>% distinct(transaction_id, bar)
bills %>% distinct(transaction_id)
bills %>% distinct(transaction_id, bar)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id, bar) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
bills %>% distinct(transaction_id)
(bills %>% distinct(transaction_id)) %in% transactions$transaction_id
(bills %>% distinct(transaction_id))$transaction_id %in% transactions$transaction_id
transactions$transaction_id %in% (bills %>% distinct(transaction_id))$transaction_id
t <- tbl_df(transactions$transaction_id %in% (bills %>% distinct(transaction_id))$transaction_id)
View(t)
t %>% filter(value == 'FALSE')
transactions
source('~/Documents/barbeerdrinker/generate_transactions.R')
source('~/Documents/barbeerdrinker/generate_transactions.R')
View(t)
View(transactions)
bills %>% distinct(transaction_id)
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id, bar) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
transactions
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
transactions
transactions[1,1]
bills %>% filter(transaction_id = transactions[1,1]$transaction_id)
bills %>% filter(transaction_id == transactions[1,1]$transaction_id)
(bills %>% filter(transaction_id == transactions[1,1]$transaction_id))[1,2]
(bills %>% filter(transaction_id == transactions[1,1]$transaction_id))[1,2]$bar
View(transactions)
add_column(transactions, bar_name = NA_character_)
(bills %>% filter(transaction_id == transactions[1,1]$transaction_id))[1,2]$bar
# calculate subtotal
transactions <- bills %>%
mutate(item_total = quantity * price) %>%
group_by(transaction_id) %>%
summarise(subtotal = sum(item_total)) %>%
ungroup()
add_column(transactions, bar_name = NA_character_)
for (i in seq(1:nrow(transactions))) {
transactions[i,3] <- (bills %>% filter(transaction_id == transactions[i,1]$transaction_id))[i,2]$bar
}
transactions
View(transactions)
transactions[i,1]$transaction_id
transactions[1,1]$transaction_id
transactions[2,1]$transaction_id
transactions[2000,1]$transaction_id
for (i in seq(1:nrow(transactions))) {
transactions[i,3] <- (bills %>% filter(transaction_id == transactions[i,1]$transaction_id))[1,2]$bar
}
View(transactions)
source('~/Documents/barbeerdrinker/generate_transactions.R')
add_column(transactions, bar_name = NA_character_)
for (i in seq(1:nrow(transactions))) {
transactions[i,3] <- (bills %>% filter(transaction_id == transactions[i,1]$transaction_id))[1,2]$bar
}
# rename columns to match barbeerdrinker AWS instance
colnames(transactions) <- c("transaction_id",
"bar_name",
"subtotal")
# generate random tip % between 10%-20%
tip <- tbl_df(runif(nrow(transactions), 10, 20))/100
# add tip column and calculate total using 7% sales tax
transactions <- transactions %>%
mutate(tip = tip$value) %>%
mutate(total = (subtotal + subtotal*tip) + (subtotal + subtotal*tip)*0.07)
View(transactions)
source('~/Documents/barbeerdrinker/generate_transactions.R')
View(transactions)
transactions %>% distinct(transaction_id)
source('~/Documents/barbeerdrinker/generate_transactions.R')
View(transactions)
source('~/Documents/barbeerdrinker/generate_transactions.R')
View(transactions)
source('~/Documents/barbeerdrinker/generate_transactions.R')
View(transactions)
transactions
rm(t)
rm(list=ls())
source('~/Documents/barbeerdrinker/gtransactions.R')
transactions
transactions
# generate those timestamps and add them to the database in-function
transactions <- tbl_df(genHours(transactions, bars_md) %>% arrange(transaction_time))
transactions
tbl_df(transactions)
library(tidyverse)
tbl_df(transactions)
frequents
frequents %>% distinct(bar)
t <- frequents %>% distinct(bar)
View(t)
source('~/Documents/barbeerdrinker/gen_tables/gen_transac.R')
rm(t)
source('~/Documents/barbeerdrinker/gen_tables/gen_transac.R')
bills
rm(list = ls())
source('~/Documents/barbeerdrinker/gen_tables/gen_transac.R')
(bills %>% filter(transaction_id == transactions[i,1]$transaction_id))[1,2]$bar
bills
bills %>% filter(transaction_id == transactions[i,1]$transaction_id)
bills
source('~/Documents/barbeerdrinker/gen_tables/gen_transac.R')
transactions[i,3] <- (bills %>% filter(transaction_id == transactions[i,1]$transaction_id))[1,2]$bar
bills
source('~/Documents/barbeerdrinker/gen_tables/gen_transac.R')
source('~/Documents/barbeerdrinker/gen_tables/gen_transac.R')
rm(list=ls())
t <- read_csv("~/Documents/hw6.csv")
library(tidyverse)
t <- read_csv("~/Documents/hw6.csv")
t
t
t <- read_csv("~/Documents/hw6.csv")
t
t(t)
tbl_df(t(t))
t <- tbl_df(t(t))
t
t$V1 <- t$V1/t$V1
t
t[4,1]
t[4,1] <- 0
t
t[5,1] <- 0
t
t <- read_csv("~/Documents/hw6.csv")
t <- read_csv("~/Documents/hw6.csv") %>% tbl_df(t(t))
t
t <- read_csv("~/Documents/hw6.csv")
t <- tbl_df(t(t))
t
t$V1 <- t$V1/t[1,1]
t$V1 <- t$V1/t[1,1]$value
t[1,1]
t$V1 <- t$V1/t[1,1]$V1
t
t(t)
t$V2 <- t$V2+0.625*t$V1
t
t(t)
t$V3 <- t$V3+t$V1
t
t(t)
t$V5 <- t$V5+1.625*t$V1
t(t)
# utility functions
util_bar_tbl <- function(){
query <- "select *
from barbeerdrinker.bars"
pool <- pool::dbPool(
drv = RMySQL::MySQL(),
dbname = "barbeerdrinker",
host = "barbeerdrinker.cwbowizjcrlm.us-west-1.rds.amazonaws.com",
username = "juanmatthew",
password = "password"
)
bars_tbl <- tbl_df(dbGetQuery(pool, query))
poolClose(pool)
rm(pool)
return(bars_tbl)
}
util_bar_tbl
util_bar_tbl()
source('~/Documents/barbeerdrinker/utilities.R')
util_bar_tbl
util_bar_tbl()
# pool utility function
poolConnect <- function(){
return(
pool::dbPool(
drv = RMySQL::MySQL(),
dbname = "barbeerdrinker",
host = "barbeerdrinker.cwbowizjcrlm.us-west-1.rds.amazonaws.com",
username = "juanmatthew",
password = "password"
)
)
}
source('~/Documents/barbeerdrinker/utilities.R')
util_bar_tbl()
source('~/Documents/barbeerdrinker/utilities.R')
View(util_bar_tbl)
View(util_bars_tbl)
View(util_beers_tbl)
View(util_drinkers_tbl)
rm(util_bar_tbl)
util_bars_tbl()
source('~/Documents/barbeerdrinker/utilities.R')
util_bars_tbl()
util_beers_tbl()
source('~/Documents/barbeerdrinker/utilities.R')
util_beers_tbl()
util_drinkers_tbl()
shiny::runApp('Documents/barbeerdrinker')
runApp('Documents/barbeerdrinker')
shinyApp(ui = ui, server = server)
runApp("barbeerdrinker")
runApp("../barbeerdrinker")
runApp("./../barbeerdrinker")
runApp("barbeerdrinker")
source("utilities.R")
source(".utilities.R")
source("./utilities.R")
source('~/Documents/hw6.R')
source("utilities.R")
runApp('Documents/barbeerdrinker/src')
setwd("~/Documents/barbeerdrinker/")
runApp('src')
runApp('src')
runApp('barbeerdrinker-app')
runApp('barbeerdrinker-app')
runApp('barbeerdrinker-app')
source("utilities.R")
